#include <stdio.h>
#include <string.h>

#define MAX_TASKS 10

struct Task {
    char description[50];
    int completed;
};

int main() {
    struct Task tasks[MAX_TASKS];
    int numTasks = 0;
    
    int choice;
    do {
        printf("\nTo-Do List Manager\n");
        printf("1. Add Task\n");
        printf("2. Display Tasks\n");
        printf("3. Remove Task\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                if (numTasks < MAX_TASKS) {
                    printf("Enter task description: ");
                    scanf(" %[^\n]s", tasks[numTasks].description);
                    tasks[numTasks].completed = 0;
                    numTasks++;
                    printf("Task added successfully!\n");
                } else {
                    printf("Task list is full.\n");
                }
                break;
            case 2:
                if (numTasks == 0) {
                    printf("No tasks to display.\n");
                } else {
                    printf("\nTask List:\n");
                    for (int i = 0; i < numTasks; i++) {
                        printf("%d. %s - %s\n", i + 1, tasks[i].completed ? "[X]" : "[ ]", tasks[i].description);
                    }
                }
                break;
            case 3:
                if (numTasks == 0) {
                    printf("No tasks to remove.\n");
                } else {
                    printf("Enter task number to remove: ");
                    int taskNumber;
                    scanf("%d", &taskNumber);
                    if (taskNumber >= 1 && taskNumber <= numTasks) {
                        for (int i = taskNumber - 1; i < numTasks - 1; i++) {
                            tasks[i] = tasks[i + 1];
                        }
                        numTasks--;
                        printf("Task removed.\n");
                    } else {
                        printf("Invalid task number.\n");
                    }
                }
                break;
            case 4:
                printf("Exiting...\n");
                break;
            default:
                printf("Invalid choice. Please enter a valid option.\n");
        }
    } while (choice != 4);

    return 0;
}